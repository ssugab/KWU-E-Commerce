##fetch data using axios


import React, { useEffect, useState } from 'react';
import { NavLink } from 'react-router-dom';
import axios from 'axios';

const ProductGrid = ({ isHomePage = false }) => {
  const [products, setProducts] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    const fetchProducts = async () => {
      try {
        setLoading(true);
        setError(null);
        const endpoint = isHomePage ? '/api/products/home' : '/api/products';
        const response = await axios.get(endpoint);
        const productsData = Array.isArray(response.data) ? response.data : [];
        setProducts(productsData);
      } catch (error) {
        console.error('Error fetching products:', error);
        setError(error.response?.data?.message || 'Gagal memuat produk');
        setProducts([]);
      } finally {
        setLoading(false);
      }
    };

    fetchProducts();
  }, [isHomePage]);

  if (loading) {
    return (
      <div className="text-center p-10">
        <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-accent mx-auto"></div>
        <p className="mt-4">Memuat produk...</p>
      </div>
    );
  }

  if (error) {
    return (
      <div className="text-center p-10">
        <div className="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative">
          <strong className="font-bold">Error!</strong>
          <span className="block sm:inline"> {error}</span>
        </div>
      </div>
    );
  }

  if (!products || products.length === 0) {
    return (
      <div className="text-center p-10">
        <p className="text-gray-500">Tidak ada produk yang tersedia</p>
      </div>
    );
  }

  return (
    <section className="p-10">
      <div className="flex justify-center mb-6">
        <h2 className="text-center text-3xl font-bold">Produk Kami</h2>
      </div>
      <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6">
        {products.map((product) => (
          <NavLink 
            to={`/product/${product._id}`} 
            key={product._id} 
            className="bg-white shadow-md rounded-lg border-3 p-3 hover:shadow-lg hover:shadow-accent transition-all flex flex-col items-center"
          >
            <img 
              className="w-3/4 rounded-lg block object-cover h-48" 
              src={product.image} 
              alt={product.name}
              onError={(e) => {
                e.target.src = 'https://via.placeholder.com/300x300?text=No+Image';
              }}
            />
            <div className='mt-auto w-full bg-offwhite rounded-lg p-2'>
              <h2 className="text-lg font-display font-medium mt-3">{product.name}</h2>
              <p className="text-gray-600 font-display line-clamp-2">{product.description}</p>
              <p className="text-accent font-bold mt-2">Rp {product.price?.toLocaleString() || '0'}</p>
            </div>
          </NavLink>
        ))}
      </div>
      {isHomePage && (
        <div className="flex justify-center mt-8">
          <NavLink 
            to="/catalog" 
            className="bg-accent text-white px-6 py-3 rounded-lg hover:bg-amber-700 transition-colors"
          >
            Lihat Semua Produk
          </NavLink>
        </div>
      )}
    </section>
  );
};

export default ProductGrid;